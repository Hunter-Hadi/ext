import { SxProps } from '@mui/material'
import { Theme } from '@mui/material/styles'
import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'
import React, { FC } from 'react'

const Lock: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon
      viewBox="0 0 20 20"
      sx={{
        color: (t) => (t.palette.mode === 'dark' ? '#fff' : '#000'),
        ...props.sx,
      }}
    >
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_26761"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_26761)">
          <path
            d="M5.00016 18.3335C4.54183 18.3335 4.14947 18.1703 3.82308 17.8439C3.49669 17.5175 3.3335 17.1252 3.3335 16.6668V8.3335C3.3335 7.87516 3.49669 7.4828 3.82308 7.15641C4.14947 6.83002 4.54183 6.66683 5.00016 6.66683H5.8335V5.00016C5.8335 3.84738 6.23975 2.86475 7.05225 2.05225C7.86475 1.23975 8.84738 0.833496 10.0002 0.833496C11.1529 0.833496 12.1356 1.23975 12.9481 2.05225C13.7606 2.86475 14.1668 3.84738 14.1668 5.00016V6.66683H15.0002C15.4585 6.66683 15.8509 6.83002 16.1772 7.15641C16.5036 7.4828 16.6668 7.87516 16.6668 8.3335V16.6668C16.6668 17.1252 16.5036 17.5175 16.1772 17.8439C15.8509 18.1703 15.4585 18.3335 15.0002 18.3335H5.00016ZM10.0002 14.1668C10.4585 14.1668 10.8509 14.0036 11.1772 13.6772C11.5036 13.3509 11.6668 12.9585 11.6668 12.5002C11.6668 12.0418 11.5036 11.6495 11.1772 11.3231C10.8509 10.9967 10.4585 10.8335 10.0002 10.8335C9.54183 10.8335 9.14947 10.9967 8.82308 11.3231C8.49669 11.6495 8.3335 12.0418 8.3335 12.5002C8.3335 12.9585 8.49669 13.3509 8.82308 13.6772C9.14947 14.0036 9.54183 14.1668 10.0002 14.1668ZM7.50016 6.66683H12.5002V5.00016C12.5002 4.30572 12.2571 3.71544 11.771 3.22933C11.2849 2.74322 10.6946 2.50016 10.0002 2.50016C9.30572 2.50016 8.71544 2.74322 8.22933 3.22933C7.74322 3.71544 7.50016 4.30572 7.50016 5.00016V6.66683Z"
            fill="currentColor"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}

const Unhappy: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_26839"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_26839)">
          <path
            d="M12.9165 9.1665C13.2637 9.1665 13.5589 9.04498 13.8019 8.80192C14.045 8.55886 14.1665 8.26373 14.1665 7.9165C14.1665 7.56928 14.045 7.27414 13.8019 7.03109C13.5589 6.78803 13.2637 6.6665 12.9165 6.6665C12.5693 6.6665 12.2741 6.78803 12.0311 7.03109C11.788 7.27414 11.6665 7.56928 11.6665 7.9165C11.6665 8.26373 11.788 8.55886 12.0311 8.80192C12.2741 9.04498 12.5693 9.1665 12.9165 9.1665ZM7.08317 9.1665C7.43039 9.1665 7.72553 9.04498 7.96859 8.80192C8.21164 8.55886 8.33317 8.26373 8.33317 7.9165C8.33317 7.56928 8.21164 7.27414 7.96859 7.03109C7.72553 6.78803 7.43039 6.6665 7.08317 6.6665C6.73595 6.6665 6.44081 6.78803 6.19775 7.03109C5.9547 7.27414 5.83317 7.56928 5.83317 7.9165C5.83317 8.26373 5.9547 8.55886 6.19775 8.80192C6.44081 9.04498 6.73595 9.1665 7.08317 9.1665ZM9.99984 11.2498C9.05539 11.2498 8.19775 11.5172 7.42692 12.0519C6.65609 12.5866 6.09706 13.2915 5.74984 14.1665H7.12484C7.43039 13.6526 7.83664 13.2464 8.34359 12.9478C8.85053 12.6491 9.40261 12.4998 9.99984 12.4998C10.5971 12.4998 11.1491 12.6491 11.6561 12.9478C12.163 13.2464 12.5693 13.6526 12.8748 14.1665H14.2498C13.9026 13.2915 13.3436 12.5866 12.5728 12.0519C11.8019 11.5172 10.9443 11.2498 9.99984 11.2498ZM9.99984 18.3332C8.84706 18.3332 7.76373 18.1144 6.74984 17.6769C5.73595 17.2394 4.854 16.6457 4.104 15.8957C3.354 15.1457 2.76025 14.2637 2.32275 13.2498C1.88525 12.2359 1.6665 11.1526 1.6665 9.99984C1.6665 8.84706 1.88525 7.76373 2.32275 6.74984C2.76025 5.73595 3.354 4.854 4.104 4.104C4.854 3.354 5.73595 2.76025 6.74984 2.32275C7.76373 1.88525 8.84706 1.6665 9.99984 1.6665C11.1526 1.6665 12.2359 1.88525 13.2498 2.32275C14.2637 2.76025 15.1457 3.354 15.8957 4.104C16.6457 4.854 17.2394 5.73595 17.6769 6.74984C18.1144 7.76373 18.3332 8.84706 18.3332 9.99984C18.3332 11.1526 18.1144 12.2359 17.6769 13.2498C17.2394 14.2637 16.6457 15.1457 15.8957 15.8957C15.1457 16.6457 14.2637 17.2394 13.2498 17.6769C12.2359 18.1144 11.1526 18.3332 9.99984 18.3332Z"
            fill="#FD9800"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}

const Done: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_27243"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_27243)">
          <path
            d="M8.83333 13.5L14.7083 7.625L13.5417 6.45833L8.83333 11.1667L6.45833 8.79167L5.29167 9.95833L8.83333 13.5ZM4.16667 17.5C3.70833 17.5 3.31597 17.3368 2.98958 17.0104C2.66319 16.684 2.5 16.2917 2.5 15.8333V4.16667C2.5 3.70833 2.66319 3.31597 2.98958 2.98958C3.31597 2.66319 3.70833 2.5 4.16667 2.5H15.8333C16.2917 2.5 16.684 2.66319 17.0104 2.98958C17.3368 3.31597 17.5 3.70833 17.5 4.16667V15.8333C17.5 16.2917 17.3368 16.684 17.0104 17.0104C16.684 17.3368 16.2917 17.5 15.8333 17.5H4.16667Z"
            fill="#34A853"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const Incorrect: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon
      viewBox="0 0 20 20"
      sx={{
        color: (t) => (t.palette.mode === 'dark' ? '#fff' : '#000'),
        ...props.sx,
      }}
    >
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_26993"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_26993)">
          <path
            d="M5.33317 15.8332L4.1665 14.6665L8.83317 9.99984L4.1665 5.33317L5.33317 4.1665L9.99984 8.83317L14.6665 4.1665L15.8332 5.33317L11.1665 9.99984L15.8332 14.6665L14.6665 15.8332L9.99984 11.1665L5.33317 15.8332Z"
            fill="currentColor"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const Database: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_27257"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_27257)">
          <path
            d="M10 9.16667C12.0833 9.16667 13.8542 8.84028 15.3125 8.1875C16.7708 7.53472 17.5 6.75 17.5 5.83333C17.5 4.91667 16.7708 4.13194 15.3125 3.47917C13.8542 2.82639 12.0833 2.5 10 2.5C7.91667 2.5 6.14583 2.82639 4.6875 3.47917C3.22917 4.13194 2.5 4.91667 2.5 5.83333C2.5 6.75 3.22917 7.53472 4.6875 8.1875C6.14583 8.84028 7.91667 9.16667 10 9.16667ZM10 11.25C10.5694 11.25 11.2812 11.191 12.1354 11.0729C12.9896 10.9549 13.8125 10.7639 14.6042 10.5C15.3958 10.2361 16.0764 9.89236 16.6458 9.46875C17.2153 9.04514 17.5 8.52778 17.5 7.91667V10C17.5 10.6111 17.2153 11.1285 16.6458 11.5521C16.0764 11.9757 15.3958 12.3194 14.6042 12.5833C13.8125 12.8472 12.9896 13.0382 12.1354 13.1562C11.2812 13.2743 10.5694 13.3333 10 13.3333C9.43056 13.3333 8.71875 13.2743 7.86458 13.1562C7.01042 13.0382 6.1875 12.8472 5.39583 12.5833C4.60417 12.3194 3.92361 11.9757 3.35417 11.5521C2.78472 11.1285 2.5 10.6111 2.5 10V7.91667C2.5 8.52778 2.78472 9.04514 3.35417 9.46875C3.92361 9.89236 4.60417 10.2361 5.39583 10.5C6.1875 10.7639 7.01042 10.9549 7.86458 11.0729C8.71875 11.191 9.43056 11.25 10 11.25ZM10 15.4167C10.5694 15.4167 11.2812 15.3576 12.1354 15.2396C12.9896 15.1215 13.8125 14.9306 14.6042 14.6667C15.3958 14.4028 16.0764 14.059 16.6458 13.6354C17.2153 13.2118 17.5 12.6944 17.5 12.0833V14.1667C17.5 14.7778 17.2153 15.2951 16.6458 15.7188C16.0764 16.1424 15.3958 16.4861 14.6042 16.75C13.8125 17.0139 12.9896 17.2049 12.1354 17.3229C11.2812 17.441 10.5694 17.5 10 17.5C9.43056 17.5 8.71875 17.441 7.86458 17.3229C7.01042 17.2049 6.1875 17.0139 5.39583 16.75C4.60417 16.4861 3.92361 16.1424 3.35417 15.7188C2.78472 15.2951 2.5 14.7778 2.5 14.1667V12.0833C2.5 12.6944 2.78472 13.2118 3.35417 13.6354C3.92361 14.059 4.60417 14.4028 5.39583 14.6667C6.1875 14.9306 7.01042 15.1215 7.86458 15.2396C8.71875 15.3576 9.43056 15.4167 10 15.4167Z"
            fill="#FFC107"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const ThumbUp: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon
      viewBox="0 0 20 20"
      sx={{
        color: 'primary.main',
        ...props.sx,
      }}
    >
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_26918"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_26918)">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M13.8748 3.04183L13.5145 4.46683L12.9582 6.66683H15.2274H17.4998C17.9443 6.66683 18.3332 6.8335 18.6665 7.16683C18.9998 7.50016 19.1665 7.88905 19.1665 8.3335V10.0002C19.1665 10.0974 19.1561 10.2016 19.1353 10.3127C19.1144 10.4238 19.0832 10.5279 19.0415 10.6252L16.5415 16.5002C16.4165 16.7779 16.2082 17.0141 15.9165 17.2085C15.6248 17.4029 15.3193 17.5002 14.9998 17.5002H8.8665H6.6665V15.3002V6.66683L10.9442 2.38913L12.4998 0.833496L13.5415 1.87516L13.5419 1.87559C13.639 1.97277 13.7187 2.10457 13.7811 2.271C13.821 2.37749 13.8482 2.48116 13.8626 2.58198C13.8708 2.63895 13.8748 2.69501 13.8748 2.75016V3.04183ZM8.8665 15.3002H14.6612L16.9665 9.88279V8.86683H12.9582H10.1326L10.8253 6.12748L10.9973 5.44729L8.8665 7.5781V15.3002ZM4.99984 17.5002V6.66683H1.6665V17.5002H4.99984Z"
            fill="currentColor"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const QuestionMark: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon
      viewBox="0 0 20 20"
      sx={{
        color: (t) => (t.palette.mode === 'dark' ? '#fff' : '#000'),
        ...props.sx,
      }}
    >
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_286_27380"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <rect width="20" height="20" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_286_27380)">
          <path
            d="M8.83301 13.3333C8.83301 12.2083 8.9337 11.3993 9.13509 10.9063C9.33648 10.4132 9.76356 9.875 10.4163 9.29167C10.9858 8.79167 11.4198 8.35764 11.7184 7.98958C12.017 7.62153 12.1663 7.20139 12.1663 6.72917C12.1663 6.15972 11.9754 5.6875 11.5934 5.3125C11.2115 4.9375 10.6802 4.75 9.99967 4.75C9.29134 4.75 8.75315 4.96528 8.38509 5.39583C8.01704 5.82639 7.75662 6.26389 7.60384 6.70833L5.45801 5.79167C5.74967 4.90278 6.2844 4.13194 7.06217 3.47917C7.83995 2.82639 8.81912 2.5 9.99967 2.5C11.458 2.5 12.5795 2.90625 13.3643 3.71875C14.149 4.53125 14.5413 5.50694 14.5413 6.64583C14.5413 7.34028 14.392 7.93403 14.0934 8.42708C13.7948 8.92014 13.3261 9.47917 12.6872 10.1042C12.0066 10.7569 11.5934 11.2535 11.4476 11.5938C11.3018 11.934 11.2288 12.5139 11.2288 13.3333H8.83301ZM9.99967 18.3333C9.54134 18.3333 9.14898 18.1701 8.82259 17.8437C8.4962 17.5174 8.33301 17.125 8.33301 16.6667C8.33301 16.2083 8.4962 15.816 8.82259 15.4896C9.14898 15.1632 9.54134 15 9.99967 15C10.458 15 10.8504 15.1632 11.1768 15.4896C11.5031 15.816 11.6663 16.2083 11.6663 16.6667C11.6663 17.125 11.5031 17.5174 11.1768 17.8437C10.8504 18.1701 10.458 18.3333 9.99967 18.3333Z"
            fill="currentColor"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const ChatGPTLogo: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 21 20" sx={props.sx}>
      <svg
        width="21"
        height="20"
        viewBox="0 0 21 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_25824)">
          <path
            d="M17.4665 0H4.13314C2.29219 0 0.799805 1.49238 0.799805 3.33333V16.6667C0.799805 18.5076 2.29219 20 4.13314 20H17.4665C19.3074 20 20.7998 18.5076 20.7998 16.6667V3.33333C20.7998 1.49238 19.3074 0 17.4665 0Z"
            fill="#0FA47F"
          />
          <path
            d="M17.1665 8.75058C17.3332 8.25015 17.391 7.71997 17.3361 7.19544C17.2812 6.67091 17.115 6.16416 16.8483 5.7091C16.4531 5.02081 15.8495 4.47586 15.1245 4.15289C14.3995 3.82992 13.5907 3.74563 12.8146 3.91219C12.4646 3.51773 12.0344 3.20258 11.5527 2.98785C11.071 2.77312 10.549 2.66375 10.0217 2.66707C9.2283 2.66516 8.45481 2.91524 7.81271 3.38129C7.17059 3.84732 6.69308 4.50524 6.449 5.26017C5.93214 5.36597 5.44384 5.58097 5.0168 5.89076C4.58976 6.20056 4.23382 6.59799 3.97282 7.05649C3.57448 7.7429 3.40445 8.538 3.48724 9.32733C3.57003 10.1166 3.90137 10.8592 4.43347 11.4479C4.26686 11.9483 4.20907 12.4786 4.26396 13.0031C4.31884 13.5276 4.48513 14.0343 4.75171 14.4894C5.14694 15.1777 5.75058 15.7226 6.47557 16.0456C7.20055 16.3685 8.0094 16.4528 8.7854 16.2863C9.13546 16.6807 9.56571 16.9959 10.0473 17.2107C10.529 17.4254 11.051 17.5347 11.5783 17.5314C12.3721 17.5335 13.146 17.2833 13.7884 16.817C14.4308 16.3507 14.9084 15.6922 15.1522 14.9369C15.6691 14.8311 16.1574 14.6161 16.5845 14.3063C17.0115 13.9965 17.3674 13.599 17.6284 13.1406C18.0263 12.4542 18.1959 11.6592 18.1129 10.8702C18.0299 10.0813 17.6985 9.33908 17.1665 8.75058ZM11.5795 16.5597C10.9279 16.5607 10.2967 16.3324 9.79638 15.9151C9.81896 15.9027 9.85855 15.8811 9.8843 15.8652L12.844 14.1557C12.9183 14.1134 12.98 14.0521 13.0227 13.9781C13.0655 13.9041 13.0877 13.82 13.0872 13.7346V9.562L14.3382 10.2843C14.3447 10.2876 14.3504 10.2924 14.3546 10.2984C14.3589 10.3044 14.3615 10.3113 14.3625 10.3186V13.7741C14.3615 14.5122 14.0681 15.2197 13.5465 15.7418C13.0249 16.264 12.3175 16.5581 11.5795 16.5597ZM5.5945 14.0036C5.26811 13.4396 5.15047 12.7788 5.26219 12.1369C5.28416 12.1501 5.32256 12.1735 5.3501 12.1893L8.30977 13.8989C8.38354 13.942 8.46745 13.9647 8.55288 13.9647C8.63828 13.9647 8.72219 13.942 8.79596 13.8989L12.4094 11.8125V13.2572C12.4098 13.2646 12.4084 13.2719 12.4053 13.2787C12.4021 13.2853 12.3975 13.2912 12.3915 13.2956L9.39963 15.023C8.75965 15.3917 7.99959 15.4912 7.28624 15.3002C6.57287 15.109 5.96446 14.6427 5.5945 14.0036ZM4.81589 7.54234C5.14086 6.97763 5.65415 6.5453 6.26585 6.32096C6.26585 6.34645 6.26438 6.3916 6.26438 6.42292V9.84208C6.26386 9.9275 6.2861 10.0115 6.32879 10.0855C6.37148 10.1594 6.4331 10.2207 6.50731 10.2629L10.1208 12.3491L8.8698 13.0714C8.86362 13.0755 8.85653 13.0779 8.84917 13.0786C8.84181 13.0792 8.83438 13.0781 8.82758 13.0752L5.83537 11.3462C5.19653 10.9763 4.73046 10.3681 4.53935 9.655C4.34824 8.942 4.44769 8.18222 4.81589 7.54234ZM15.094 9.93408L11.4805 7.84769L12.7315 7.12565C12.7376 7.1216 12.7447 7.11911 12.752 7.11844C12.7595 7.11777 12.7668 7.11896 12.7736 7.12186L15.7659 8.84933C16.2243 9.11408 16.5977 9.504 16.8426 9.97342C17.0875 10.4427 17.1935 10.9722 17.1483 11.4997C17.1031 12.0271 16.9086 12.5308 16.5875 12.9517C16.2665 13.3727 15.8321 13.6934 15.3354 13.8763C15.3354 13.8506 15.3354 13.8055 15.3354 13.7741V10.3549C15.336 10.2697 15.314 10.1857 15.2716 10.1118C15.2292 10.0378 15.1679 9.97658 15.094 9.93408ZM16.339 8.06014C16.317 8.04666 16.2787 8.0235 16.2511 8.00771L13.2915 6.2981C13.2176 6.25507 13.1338 6.23237 13.0484 6.23237C12.963 6.23237 12.879 6.25507 12.8053 6.2981L9.1918 8.38458V6.93988C9.19146 6.93248 9.1928 6.92512 9.19596 6.91843C9.19905 6.91175 9.2038 6.90592 9.20971 6.90149L12.2016 5.17547C12.66 4.91118 13.1841 4.78287 13.7128 4.80557C14.2414 4.82826 14.7525 5.00102 15.1866 5.30362C15.6206 5.60623 15.9595 6.02617 16.1636 6.51434C16.3677 7.0025 16.4285 7.53866 16.339 8.06014ZM8.51171 10.6351L7.26041 9.91275C7.25387 9.9095 7.24819 9.90466 7.24395 9.89866C7.23971 9.89266 7.237 9.88575 7.23611 9.87842V6.42292C7.23644 5.89369 7.38754 5.37549 7.67167 4.92899C7.95585 4.48249 8.36131 4.12617 8.84062 3.90173C9.31996 3.6773 9.85321 3.59403 10.3781 3.66169C10.903 3.72935 11.3979 3.94512 11.8045 4.28377C11.782 4.29607 11.7427 4.31776 11.7166 4.33358L8.75697 6.04317C8.68269 6.08538 8.62104 6.14662 8.57826 6.22058C8.53553 6.29453 8.51327 6.37856 8.51376 6.46395L8.51171 10.6351ZM9.19121 9.16992L10.8006 8.24037L12.41 9.16933V11.0277L10.8006 11.9567L9.19121 11.0277V9.16992Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_270_25824">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.799805)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const ChatGPTLogoGray: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 21 20" sx={props.sx}>
      <svg
        width="21"
        height="20"
        viewBox="0 0 21 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_24760)">
          <path
            d="M17.4665 0H4.13314C2.29219 0 0.799805 1.49238 0.799805 3.33333V16.6667C0.799805 18.5076 2.29219 20 4.13314 20H17.4665C19.3074 20 20.7998 18.5076 20.7998 16.6667V3.33333C20.7998 1.49238 19.3074 0 17.4665 0Z"
            fill="black"
            fillOpacity="0.38"
          />
          <path
            d="M17.1665 8.75058C17.3332 8.25015 17.391 7.71997 17.3361 7.19544C17.2812 6.67091 17.115 6.16416 16.8483 5.7091C16.4531 5.02081 15.8495 4.47586 15.1245 4.15289C14.3995 3.82992 13.5907 3.74563 12.8146 3.91219C12.4646 3.51773 12.0344 3.20258 11.5527 2.98785C11.071 2.77312 10.549 2.66375 10.0217 2.66707C9.2283 2.66516 8.45481 2.91524 7.81271 3.38129C7.17059 3.84732 6.69308 4.50524 6.449 5.26017C5.93214 5.36597 5.44384 5.58097 5.0168 5.89076C4.58976 6.20056 4.23382 6.59799 3.97282 7.05649C3.57448 7.7429 3.40445 8.538 3.48724 9.32733C3.57003 10.1166 3.90137 10.8592 4.43347 11.4479C4.26686 11.9483 4.20907 12.4786 4.26396 13.0031C4.31884 13.5276 4.48513 14.0343 4.75171 14.4894C5.14694 15.1777 5.75058 15.7226 6.47557 16.0456C7.20055 16.3685 8.0094 16.4528 8.7854 16.2863C9.13546 16.6807 9.56571 16.9959 10.0473 17.2107C10.529 17.4254 11.051 17.5347 11.5783 17.5314C12.3721 17.5335 13.146 17.2833 13.7884 16.817C14.4308 16.3507 14.9084 15.6922 15.1522 14.9369C15.6691 14.8311 16.1574 14.6161 16.5845 14.3063C17.0115 13.9965 17.3674 13.599 17.6284 13.1406C18.0263 12.4542 18.1959 11.6592 18.1129 10.8702C18.0299 10.0813 17.6985 9.33908 17.1665 8.75058ZM11.5795 16.5597C10.9279 16.5607 10.2967 16.3324 9.79638 15.9151C9.81896 15.9027 9.85855 15.8811 9.8843 15.8652L12.844 14.1557C12.9183 14.1134 12.98 14.0521 13.0227 13.9781C13.0655 13.9041 13.0877 13.82 13.0872 13.7346V9.562L14.3382 10.2843C14.3447 10.2876 14.3504 10.2924 14.3546 10.2984C14.3589 10.3044 14.3615 10.3113 14.3625 10.3186V13.7741C14.3615 14.5122 14.0681 15.2197 13.5465 15.7418C13.0249 16.264 12.3175 16.5581 11.5795 16.5597ZM5.5945 14.0036C5.26811 13.4396 5.15047 12.7788 5.26219 12.1369C5.28416 12.1501 5.32256 12.1735 5.3501 12.1893L8.30977 13.8989C8.38354 13.942 8.46745 13.9647 8.55288 13.9647C8.63828 13.9647 8.72219 13.942 8.79596 13.8989L12.4094 11.8125V13.2572C12.4098 13.2646 12.4084 13.2719 12.4053 13.2787C12.4021 13.2853 12.3975 13.2912 12.3915 13.2956L9.39963 15.023C8.75965 15.3917 7.99959 15.4912 7.28624 15.3002C6.57287 15.109 5.96446 14.6427 5.5945 14.0036ZM4.81589 7.54234C5.14086 6.97763 5.65415 6.5453 6.26585 6.32096C6.26585 6.34645 6.26438 6.3916 6.26438 6.42292V9.84208C6.26386 9.9275 6.2861 10.0115 6.32879 10.0855C6.37148 10.1594 6.4331 10.2207 6.50731 10.2629L10.1208 12.3491L8.8698 13.0714C8.86362 13.0755 8.85653 13.0779 8.84917 13.0786C8.84181 13.0792 8.83438 13.0781 8.82758 13.0752L5.83537 11.3462C5.19653 10.9763 4.73046 10.3681 4.53935 9.655C4.34824 8.942 4.44769 8.18222 4.81589 7.54234ZM15.094 9.93408L11.4805 7.84769L12.7315 7.12565C12.7376 7.1216 12.7447 7.11911 12.752 7.11844C12.7595 7.11777 12.7668 7.11896 12.7736 7.12186L15.7659 8.84933C16.2243 9.11408 16.5977 9.504 16.8426 9.97342C17.0875 10.4427 17.1935 10.9722 17.1483 11.4997C17.1031 12.0271 16.9086 12.5308 16.5875 12.9517C16.2665 13.3727 15.8321 13.6934 15.3354 13.8763C15.3354 13.8506 15.3354 13.8055 15.3354 13.7741V10.3549C15.336 10.2697 15.314 10.1857 15.2716 10.1118C15.2292 10.0378 15.1679 9.97658 15.094 9.93408ZM16.339 8.06014C16.317 8.04666 16.2787 8.0235 16.2511 8.00771L13.2915 6.2981C13.2176 6.25507 13.1338 6.23237 13.0484 6.23237C12.963 6.23237 12.879 6.25507 12.8053 6.2981L9.1918 8.38458V6.93988C9.19146 6.93248 9.1928 6.92512 9.19596 6.91843C9.19905 6.91175 9.2038 6.90592 9.20971 6.90149L12.2016 5.17547C12.66 4.91118 13.1841 4.78287 13.7128 4.80557C14.2414 4.82826 14.7525 5.00102 15.1866 5.30362C15.6206 5.60623 15.9595 6.02617 16.1636 6.51434C16.3677 7.0025 16.4285 7.53866 16.339 8.06014ZM8.51171 10.6351L7.26041 9.91275C7.25387 9.9095 7.24819 9.90466 7.24395 9.89866C7.23971 9.89266 7.237 9.88575 7.23611 9.87842V6.42292C7.23644 5.89369 7.38754 5.37549 7.67167 4.92899C7.95585 4.48249 8.36131 4.12617 8.84062 3.90173C9.31996 3.6773 9.85321 3.59403 10.3781 3.66169C10.903 3.72935 11.3979 3.94512 11.8045 4.28377C11.782 4.29607 11.7427 4.31776 11.7166 4.33358L8.75697 6.04317C8.68269 6.08538 8.62104 6.14662 8.57826 6.22058C8.53553 6.29453 8.51327 6.37856 8.51376 6.46395L8.51171 10.6351ZM9.19121 9.16992L10.8006 8.24037L12.41 9.16933V11.0277L10.8006 11.9567L9.19121 11.0277V9.16992Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_270_24760">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.799805)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const ChatGPTLogoOutLine: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 21 20" sx={props.sx}>
      <svg
        width="21"
        height="20"
        viewBox="0 0 21 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_24770)">
          <path
            d="M19.4827 8.1854C19.7069 7.51207 19.7846 6.79871 19.7108 6.09297C19.6369 5.38722 19.4132 4.70539 19.0545 4.09312C18.5228 3.16703 17.7106 2.43381 16.7352 1.99926C15.7597 1.56471 14.6714 1.4513 13.6272 1.6754C13.1563 1.14466 12.5774 0.72063 11.9293 0.431709C11.2812 0.142788 10.5789 -0.00436399 9.86937 9.85424e-05C8.80183 -0.0024691 7.76112 0.334015 6.89717 0.96108C6.03321 1.58812 5.39073 2.47334 5.06232 3.48908C4.36689 3.63145 3.70989 3.92072 3.13531 4.33754C2.56073 4.75437 2.08183 5.28911 1.73066 5.90602C1.19469 6.82957 0.965915 7.89937 1.07731 8.96141C1.18871 10.0233 1.63452 11.0225 2.35046 11.8146C2.12629 12.4879 2.04853 13.2014 2.12237 13.9071C2.19622 14.6128 2.41996 15.2946 2.77865 15.9069C3.31042 16.833 4.12261 17.5661 5.09808 18.0007C6.07352 18.4352 7.16182 18.5487 8.20592 18.3247C8.67693 18.8553 9.25582 19.2794 9.90379 19.5683C10.552 19.8573 11.2542 20.0044 11.9637 19.9999C13.0318 20.0027 14.0731 19.6661 14.9374 19.0387C15.8017 18.4112 16.4443 17.5253 16.7724 16.509C17.4679 16.3666 18.1248 16.0774 18.6995 15.6606C19.274 15.2437 19.7529 14.7089 20.104 14.0921C20.6394 13.1686 20.8676 12.099 20.7559 11.0374C20.6443 9.9759 20.1985 8.97722 19.4827 8.1854ZM11.9654 18.6925C11.0886 18.6938 10.2394 18.3867 9.56618 17.8251C9.59657 17.8085 9.64983 17.7794 9.68447 17.7581L13.6667 15.4579C13.7667 15.401 13.8497 15.3185 13.9072 15.2189C13.9647 15.1194 13.9946 15.0062 13.994 14.8913V9.27715L15.6772 10.249C15.6859 10.2534 15.6935 10.2599 15.6993 10.268C15.705 10.2761 15.7086 10.2854 15.7098 10.2951V14.9445C15.7086 15.9375 15.3138 16.8896 14.612 17.592C13.9101 18.2946 12.9584 18.6903 11.9654 18.6925ZM3.9126 15.2532C3.47344 14.4944 3.31517 13.6054 3.46548 12.7417C3.49505 12.7594 3.54671 12.7909 3.58376 12.8122L7.56597 15.1124C7.66522 15.1704 7.77812 15.201 7.89307 15.201C8.00797 15.201 8.12087 15.1704 8.22012 15.1124L13.0819 12.3052V14.2489C13.0825 14.2589 13.0806 14.2688 13.0764 14.2779C13.0722 14.2868 13.0659 14.2947 13.0579 14.3006L9.03236 16.6249C8.17127 17.1209 7.14862 17.2549 6.18882 16.9978C5.22899 16.7406 4.41039 16.1132 3.9126 15.2532ZM2.86499 6.55972C3.30224 5.79991 3.99286 5.21821 4.81589 4.91637C4.81589 4.95066 4.81392 5.01141 4.81392 5.05356V9.654C4.81323 9.76892 4.84314 9.88194 4.90058 9.98151C4.95802 10.081 5.04093 10.1634 5.14078 10.2202L10.0027 13.0271L8.31948 13.999C8.31117 14.0045 8.30163 14.0078 8.29173 14.0087C8.28183 14.0096 8.27182 14.008 8.26267 14.0042L4.23669 11.6778C3.37714 11.1801 2.75004 10.3617 2.49291 9.40228C2.23577 8.44295 2.36958 7.42067 2.86499 6.55972ZM16.694 9.77778L11.8321 6.97057L13.5153 5.99907C13.5236 5.99362 13.5331 5.99027 13.543 5.98937C13.553 5.98846 13.5628 5.99007 13.572 5.99397L17.5981 8.31826C18.2149 8.67448 18.7173 9.19911 19.0468 9.8307C19.3762 10.4622 19.5189 11.1745 19.4581 11.8843C19.3973 12.5939 19.1356 13.2717 18.7036 13.838C18.2716 14.4044 17.6872 14.8359 17.0188 15.082C17.0188 15.0474 17.0188 14.9867 17.0188 14.9445V10.344C17.0197 10.2293 16.9901 10.1164 16.9331 10.0169C16.876 9.91738 16.7935 9.83496 16.694 9.77778ZM18.3693 7.25642C18.3397 7.23827 18.2881 7.20711 18.251 7.18587L14.2688 4.88561C14.1694 4.82771 14.0566 4.79717 13.9417 4.79717C13.8268 4.79717 13.7139 4.82771 13.6146 4.88561L8.75272 7.69295V5.74912C8.75228 5.73916 8.75407 5.72926 8.75833 5.72026C8.76248 5.71127 8.76887 5.70342 8.77683 5.69747L12.8024 3.37513C13.4191 3.01953 14.1244 2.84689 14.8357 2.87742C15.5469 2.90796 16.2346 3.1404 16.8187 3.54756C17.4026 3.95471 17.8586 4.51974 18.1332 5.17656C18.4078 5.83337 18.4897 6.55477 18.3693 7.25642ZM7.83767 10.721L6.15407 9.74908C6.14527 9.7447 6.13762 9.7382 6.13192 9.73013C6.12622 9.72205 6.12256 9.71275 6.12136 9.70288V5.05356C6.12181 4.34148 6.32512 3.64425 6.70741 3.04349C7.08977 2.44273 7.63532 1.9633 8.28022 1.66133C8.92517 1.35936 9.64265 1.24732 10.3489 1.33835C11.0552 1.42939 11.721 1.71971 12.2681 2.17535C12.2379 2.1919 12.185 2.22108 12.1499 2.24238L8.16767 4.5426C8.06773 4.5994 7.98478 4.68179 7.92722 4.78131C7.86972 4.88081 7.83978 4.99387 7.84043 5.10876L7.83767 10.721ZM8.75194 8.74961L10.9174 7.49892L13.0827 8.74882V11.2493L10.9174 12.4991L8.75194 11.2493V8.74961Z"
            fill="black"
          />
        </g>
        <defs>
          <clipPath id="clip0_270_24770">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.899902)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const ChatGPTLogoOutLineGray: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 21 20" sx={props.sx}>
      <svg
        width="21"
        height="20"
        viewBox="0 0 21 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_24450)">
          <path
            d="M19.4827 8.1854C19.7069 7.51207 19.7846 6.79871 19.7108 6.09297C19.6369 5.38722 19.4132 4.70539 19.0545 4.09312C18.5228 3.16703 17.7106 2.43381 16.7352 1.99926C15.7597 1.56471 14.6714 1.4513 13.6272 1.6754C13.1563 1.14466 12.5774 0.72063 11.9293 0.431709C11.2812 0.142788 10.5789 -0.00436399 9.86937 9.85424e-05C8.80183 -0.0024691 7.76112 0.334015 6.89717 0.96108C6.03321 1.58812 5.39073 2.47334 5.06232 3.48908C4.36689 3.63145 3.70989 3.92072 3.13531 4.33754C2.56073 4.75437 2.08183 5.28911 1.73066 5.90602C1.19469 6.82957 0.965915 7.89937 1.07731 8.96141C1.18871 10.0233 1.63452 11.0225 2.35046 11.8146C2.12629 12.4879 2.04853 13.2014 2.12237 13.9071C2.19622 14.6128 2.41996 15.2946 2.77865 15.9069C3.31042 16.833 4.12261 17.5661 5.09808 18.0007C6.07352 18.4352 7.16182 18.5487 8.20592 18.3247C8.67693 18.8553 9.25582 19.2794 9.90379 19.5683C10.552 19.8573 11.2542 20.0044 11.9637 19.9999C13.0318 20.0027 14.0731 19.6661 14.9374 19.0387C15.8017 18.4112 16.4443 17.5253 16.7724 16.509C17.4679 16.3666 18.1248 16.0774 18.6995 15.6606C19.274 15.2437 19.7529 14.7089 20.104 14.0921C20.6394 13.1686 20.8676 12.099 20.7559 11.0374C20.6443 9.9759 20.1985 8.97722 19.4827 8.1854ZM11.9654 18.6925C11.0886 18.6938 10.2394 18.3867 9.56618 17.8251C9.59657 17.8085 9.64983 17.7794 9.68447 17.7581L13.6667 15.4579C13.7667 15.401 13.8497 15.3185 13.9072 15.2189C13.9647 15.1194 13.9946 15.0062 13.994 14.8913V9.27715L15.6772 10.249C15.6859 10.2534 15.6935 10.2599 15.6993 10.268C15.705 10.2761 15.7086 10.2854 15.7098 10.2951V14.9445C15.7086 15.9375 15.3138 16.8896 14.612 17.592C13.9101 18.2946 12.9584 18.6903 11.9654 18.6925ZM3.9126 15.2532C3.47344 14.4944 3.31517 13.6054 3.46548 12.7417C3.49505 12.7594 3.54671 12.7909 3.58376 12.8122L7.56597 15.1124C7.66522 15.1704 7.77812 15.201 7.89307 15.201C8.00797 15.201 8.12087 15.1704 8.22012 15.1124L13.0819 12.3052V14.2489C13.0825 14.2589 13.0806 14.2688 13.0764 14.2779C13.0722 14.2868 13.0659 14.2947 13.0579 14.3006L9.03236 16.6249C8.17127 17.1209 7.14862 17.2549 6.18882 16.9978C5.22899 16.7406 4.41039 16.1132 3.9126 15.2532ZM2.86499 6.55972C3.30224 5.79991 3.99286 5.21821 4.81589 4.91637C4.81589 4.95066 4.81392 5.01141 4.81392 5.05356V9.654C4.81323 9.76892 4.84314 9.88194 4.90058 9.98151C4.95802 10.081 5.04093 10.1634 5.14078 10.2202L10.0027 13.0271L8.31948 13.999C8.31117 14.0045 8.30163 14.0078 8.29173 14.0087C8.28183 14.0096 8.27182 14.008 8.26267 14.0042L4.23669 11.6778C3.37714 11.1801 2.75004 10.3617 2.49291 9.40228C2.23577 8.44295 2.36958 7.42067 2.86499 6.55972ZM16.694 9.77778L11.8321 6.97057L13.5153 5.99907C13.5236 5.99362 13.5331 5.99027 13.543 5.98937C13.553 5.98846 13.5628 5.99007 13.572 5.99397L17.5981 8.31826C18.2149 8.67448 18.7173 9.19911 19.0468 9.8307C19.3762 10.4622 19.5189 11.1745 19.4581 11.8843C19.3973 12.5939 19.1356 13.2717 18.7036 13.838C18.2716 14.4044 17.6872 14.8359 17.0188 15.082C17.0188 15.0474 17.0188 14.9867 17.0188 14.9445V10.344C17.0197 10.2293 16.9901 10.1164 16.9331 10.0169C16.876 9.91738 16.7935 9.83496 16.694 9.77778ZM18.3693 7.25642C18.3397 7.23827 18.2881 7.20711 18.251 7.18587L14.2688 4.88561C14.1694 4.82771 14.0566 4.79717 13.9417 4.79717C13.8268 4.79717 13.7139 4.82771 13.6146 4.88561L8.75272 7.69295V5.74912C8.75228 5.73916 8.75407 5.72926 8.75833 5.72026C8.76248 5.71127 8.76887 5.70342 8.77683 5.69747L12.8024 3.37513C13.4191 3.01953 14.1244 2.84689 14.8357 2.87742C15.5469 2.90796 16.2346 3.1404 16.8187 3.54756C17.4026 3.95471 17.8586 4.51974 18.1332 5.17656C18.4078 5.83337 18.4897 6.55477 18.3693 7.25642ZM7.83767 10.721L6.15407 9.74908C6.14527 9.7447 6.13762 9.7382 6.13192 9.73013C6.12622 9.72205 6.12256 9.71275 6.12136 9.70288V5.05356C6.12181 4.34148 6.32512 3.64425 6.70741 3.04349C7.08977 2.44273 7.63532 1.9633 8.28022 1.66133C8.92517 1.35936 9.64265 1.24732 10.3489 1.33835C11.0552 1.42939 11.721 1.71971 12.2681 2.17535C12.2379 2.1919 12.185 2.22108 12.1499 2.24238L8.16767 4.5426C8.06773 4.5994 7.98478 4.68179 7.92722 4.78131C7.86972 4.88081 7.83978 4.99387 7.84043 5.10876L7.83767 10.721ZM8.75194 8.74961L10.9174 7.49892L13.0827 8.74882V11.2493L10.9174 12.4991L8.75194 11.2493V8.74961Z"
            fill="#9E9E9E"
          />
        </g>
        <defs>
          <clipPath id="clip0_270_24450">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.899902)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const AILogo: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_270_24216"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <path d="M20 0H0V19.9973H20V0Z" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_270_24216)">
          <path
            d="M15.661 8.40503L14.6194 6.11367L12.3277 5.07214L14.6194 4.03062L15.661 1.73926L16.7026 4.03062L18.9944 5.07214L16.7026 6.11367L15.661 8.40503ZM7.67253 17.2256L5.58919 12.6429L1.00586 10.5599L5.58919 8.47686L7.67253 3.89414L9.75586 8.47686L14.3392 10.5599L9.75586 12.6429L7.67253 17.2256Z"
            fill="#7601D3"
          />
          <path
            d="M14.8282 16.4008L15.6903 18.2575L16.5523 16.4008L18.4489 15.5567L16.5523 14.7128L15.6903 12.856L14.8282 14.7128L12.9316 15.5567L14.8282 16.4008Z"
            fill="#7601D3"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}
const AILogoGray: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <mask
          id="mask0_276_3389"
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="20"
          height="20"
        >
          <path d="M20 0H0V19.9973H20V0Z" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_276_3389)">
          <path
            d="M15.661 8.40503L14.6194 6.11367L12.3277 5.07214L14.6194 4.03062L15.661 1.73926L16.7026 4.03062L18.9944 5.07214L16.7026 6.11367L15.661 8.40503ZM7.67253 17.2256L5.58919 12.6429L1.00586 10.5599L5.58919 8.47686L7.67253 3.89414L9.75586 8.47686L14.3392 10.5599L9.75586 12.6429L7.67253 17.2256Z"
            fill="#9E9E9E"
          />
          <path
            d="M14.8282 16.4008L15.6903 18.2575L16.5523 16.4008L18.4489 15.5567L16.5523 14.7128L15.6903 12.856L14.8282 14.7128L12.9316 15.5567L14.8282 16.4008Z"
            fill="#9E9E9E"
          />
        </g>
      </svg>
    </SvgIcon>
  )
}

const BingLogo: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_24899)">
          <mask
            id="mask0_270_24899"
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="21"
            height="20"
          >
            <path d="M20.0996 0H0.0996094V20H20.0996V0Z" fill="white" />
          </mask>
          <g mask="url(#mask0_270_24899)">
            <path
              d="M9.53864 6.93624C9.53564 6.96025 9.53564 6.9875 9.53564 7.01425C9.53564 7.11828 9.55639 7.2183 9.59398 7.31033L9.62748 7.37935L9.75998 7.71842L10.4484 9.47459L11.0488 11.0082C11.2201 11.3178 11.4944 11.5608 11.8252 11.6903L11.928 11.7281C11.932 11.7293 11.9387 11.7293 11.9442 11.7308L13.5899 12.2968V12.298L14.2191 12.5141L14.2621 12.5286L14.2676 12.5301C14.3916 12.5613 14.5131 12.6033 14.6291 12.6546C14.8975 12.7703 15.1407 12.9354 15.3486 13.1367C15.4323 13.2168 15.5093 13.303 15.5806 13.395C15.6413 13.4723 15.6967 13.5535 15.7466 13.6381C15.9662 14.0027 16.0922 14.4313 16.0922 14.8876C16.0922 14.9692 16.0882 15.0479 16.08 15.1279C16.0772 15.1632 16.073 15.1972 16.0677 15.2309V15.2337C16.0622 15.2695 16.0555 15.3065 16.0487 15.3428C16.0417 15.378 16.0352 15.413 16.0272 15.448C16.026 15.452 16.0245 15.4563 16.023 15.4603C16.0155 15.4958 16.006 15.5308 15.9962 15.566C15.9875 15.5993 15.9765 15.6336 15.9642 15.6658C15.9534 15.7011 15.9408 15.7358 15.9265 15.7698C15.9142 15.8048 15.8997 15.8403 15.8835 15.8738C15.8389 15.9767 15.7859 16.0754 15.7264 16.1697C15.6496 16.2935 15.5621 16.4103 15.4646 16.5185C16.2368 15.6883 16.7501 14.6163 16.8779 13.43C16.8994 13.2355 16.9104 13.0382 16.9104 12.8397C16.9104 12.7128 16.9049 12.5873 16.8966 12.4613C16.7994 11.0388 16.1517 9.76642 15.1632 8.85842C14.8907 8.60617 14.5929 8.38159 14.2726 8.19104L13.6674 7.88171L10.6009 6.30809C10.5066 6.26767 10.4051 6.24691 10.3026 6.24707C9.90548 6.24707 9.57773 6.5499 9.53864 6.93624Z"
              fill="#7F7F7F"
            />
            <path
              d="M9.53864 6.93624C9.53564 6.96025 9.53564 6.9875 9.53564 7.01425C9.53564 7.11828 9.55639 7.2183 9.59398 7.31033L9.62748 7.37935L9.75998 7.71842L10.4484 9.47459L11.0488 11.0082C11.2201 11.3178 11.4944 11.5608 11.8252 11.6903L11.928 11.7281C11.932 11.7293 11.9387 11.7293 11.9442 11.7308L13.5899 12.2968V12.298L14.2191 12.5141L14.2621 12.5286L14.2676 12.5301C14.3916 12.5613 14.5131 12.6033 14.6291 12.6546C14.8975 12.7703 15.1407 12.9354 15.3486 13.1367C15.4323 13.2168 15.5093 13.303 15.5806 13.395C15.6413 13.4723 15.6967 13.5535 15.7466 13.6381C15.9662 14.0027 16.0922 14.4313 16.0922 14.8876C16.0922 14.9692 16.0882 15.0479 16.08 15.1279C16.0772 15.1632 16.073 15.1972 16.0677 15.2309V15.2337C16.0622 15.2695 16.0555 15.3065 16.0487 15.3428C16.0417 15.378 16.0352 15.413 16.0272 15.448C16.026 15.452 16.0245 15.4563 16.023 15.4603C16.0155 15.4958 16.006 15.5308 15.9962 15.566C15.9875 15.5993 15.9765 15.6336 15.9642 15.6658C15.9534 15.7011 15.9408 15.7358 15.9265 15.7698C15.9142 15.8048 15.8997 15.8403 15.8835 15.8738C15.8389 15.9767 15.7859 16.0754 15.7264 16.1697C15.6496 16.2935 15.5621 16.4103 15.4646 16.5185C16.2368 15.6883 16.7501 14.6163 16.8779 13.43C16.8994 13.2355 16.9104 13.0382 16.9104 12.8397C16.9104 12.7128 16.9049 12.5873 16.8966 12.4613C16.7994 11.0388 16.1517 9.76642 15.1632 8.85842C14.8907 8.60617 14.5929 8.38159 14.2726 8.19104L13.6674 7.88171L10.6009 6.30809C10.5066 6.26767 10.4051 6.24691 10.3026 6.24707C9.90548 6.24707 9.57773 6.5499 9.53864 6.93624Z"
              fill="url(#paint0_linear_270_24899)"
            />
            <path
              d="M4.07868 0C3.64233 0.00775184 3.29199 0.364837 3.29199 0.801441V14.7812C3.29374 14.8787 3.29924 14.9751 3.30624 15.0728C3.31249 15.1243 3.31924 15.1778 3.32875 15.2298C3.52804 16.3519 4.50428 17.2033 5.68306 17.2033C6.09641 17.2033 6.484 17.0981 6.82308 16.915C6.82508 16.9135 6.82857 16.9115 6.83032 16.9115L6.95236 16.8377L7.44698 16.5467L8.07613 16.1733L8.07763 3.75214C8.07763 2.92669 7.66453 2.19902 7.03213 1.76667C7.01713 1.75767 7.00262 1.74817 6.98937 1.73742L4.54128 0.136533C4.41726 0.0545129 4.26772 0.00300072 4.10743 0H4.07868Z"
              fill="#7F7F7F"
            />
            <path
              d="M4.07868 0C3.64233 0.00775184 3.29199 0.364837 3.29199 0.801441V14.7812C3.29374 14.8787 3.29924 14.9751 3.30624 15.0728C3.31249 15.1243 3.31924 15.1778 3.32875 15.2298C3.52804 16.3519 4.50428 17.2033 5.68306 17.2033C6.09641 17.2033 6.484 17.0981 6.82308 16.915C6.82508 16.9135 6.82857 16.9115 6.83032 16.9115L6.95236 16.8377L7.44698 16.5467L8.07613 16.1733L8.07763 3.75214C8.07763 2.92669 7.66453 2.19902 7.03213 1.76667C7.01713 1.75767 7.00262 1.74817 6.98937 1.73742L4.54128 0.136533C4.41726 0.0545129 4.26772 0.00300072 4.10743 0H4.07868Z"
              fill="url(#paint1_linear_270_24899)"
            />
            <path
              d="M13.7861 12.7716L8.15748 16.108L8.07646 16.1567V16.1745L7.44731 16.5471L6.95295 16.8389L6.83167 16.9121L6.82341 16.9161C6.48509 17.1 6.09725 17.204 5.68415 17.204C4.50561 17.204 3.52813 16.3531 3.32959 15.2305C3.42386 16.0517 3.70367 16.8161 4.12578 17.4821C4.99498 18.8541 6.46483 19.8086 8.16524 19.9744H9.20501C10.1247 19.8784 10.8926 19.5101 11.6998 19.0126L12.9411 18.2535C13.5003 17.8951 15.0178 17.0136 15.4649 16.5191C15.5623 16.4108 15.65 16.2947 15.7268 16.1705C15.7863 16.076 15.8393 15.9772 15.8838 15.8744C15.8988 15.8394 15.9131 15.8054 15.9268 15.7706C15.9398 15.7361 15.9521 15.7014 15.9646 15.6661C15.9878 15.5986 16.0063 15.5308 16.0241 15.4611C16.0331 15.4213 16.0413 15.3821 16.0496 15.3431C16.0766 15.1957 16.0913 15.0445 16.0913 14.8876C16.0913 14.4313 15.9653 14.0027 15.747 13.6386C15.697 13.5536 15.642 13.4723 15.581 13.3956C15.5098 13.3031 15.4327 13.2173 15.3489 13.1372C15.1412 12.936 14.8986 12.7709 14.6295 12.6549C14.5135 12.6036 14.3924 12.5614 14.2679 12.5306L14.2624 12.5291L14.2194 12.5146L13.7861 12.7716Z"
              fill="#7F7F7F"
            />
            <path
              d="M13.7861 12.7716L8.15748 16.108L8.07646 16.1567V16.1745L7.44731 16.5471L6.95295 16.8389L6.83167 16.9121L6.82341 16.9161C6.48509 17.1 6.09725 17.204 5.68415 17.204C4.50561 17.204 3.52813 16.3531 3.32959 15.2305C3.42386 16.0517 3.70367 16.8161 4.12578 17.4821C4.99498 18.8541 6.46483 19.8086 8.16524 19.9744H9.20501C10.1247 19.8784 10.8926 19.5101 11.6998 19.0126L12.9411 18.2535C13.5003 17.8951 15.0178 17.0136 15.4649 16.5191C15.5623 16.4108 15.65 16.2947 15.7268 16.1705C15.7863 16.076 15.8393 15.9772 15.8838 15.8744C15.8988 15.8394 15.9131 15.8054 15.9268 15.7706C15.9398 15.7361 15.9521 15.7014 15.9646 15.6661C15.9878 15.5986 16.0063 15.5308 16.0241 15.4611C16.0331 15.4213 16.0413 15.3821 16.0496 15.3431C16.0766 15.1957 16.0913 15.0445 16.0913 14.8876C16.0913 14.4313 15.9653 14.0027 15.747 13.6386C15.697 13.5536 15.642 13.4723 15.581 13.3956C15.5098 13.3031 15.4327 13.2173 15.3489 13.1372C15.1412 12.936 14.8986 12.7709 14.6295 12.6549C14.5135 12.6036 14.3924 12.5614 14.2679 12.5306L14.2624 12.5291L14.2194 12.5146L13.7861 12.7716Z"
              fill="url(#paint2_linear_270_24899)"
            />
            <path
              opacity="0.15"
              d="M16.0913 14.8876C16.0913 15.0445 16.0766 15.196 16.0493 15.3433C16.0413 15.3823 16.0331 15.4213 16.0238 15.4608C16.0063 15.5308 15.9878 15.5986 15.9646 15.6664C15.9523 15.7014 15.9398 15.7364 15.9268 15.7704C15.9133 15.8054 15.8988 15.8394 15.8836 15.8744C15.839 15.9769 15.7867 16.0757 15.727 16.1702C15.6503 16.2941 15.5627 16.4107 15.4649 16.5188C15.0178 17.0136 13.5003 17.8951 12.9411 18.2535L11.6998 19.0126C10.7898 19.5733 9.93018 19.9701 8.84593 19.9974C8.7946 19.9989 8.74435 20.0001 8.6946 20.0001C8.6246 20.0001 8.5556 19.9989 8.48635 19.9961C6.65037 19.9261 5.04925 18.9396 4.12578 17.4821C3.69367 16.8013 3.42146 16.0316 3.32959 15.2305C3.52813 16.3531 4.50561 17.204 5.68415 17.204C6.09725 17.204 6.48509 17.0997 6.82341 16.9161L6.83167 16.9119L6.95295 16.8389L7.44731 16.5471L8.07646 16.1745V16.1567L8.15748 16.108L13.7861 12.7714L14.2194 12.5146L14.2624 12.5291L14.2679 12.5306C14.3924 12.5614 14.5138 12.6036 14.6295 12.6549C14.8986 12.7709 15.1409 12.936 15.3489 13.1372C15.4327 13.2174 15.5103 13.3037 15.581 13.3956C15.642 13.4723 15.697 13.5536 15.747 13.6386C15.9653 14.0027 16.0913 14.4313 16.0913 14.8876Z"
              fill="#7F7F7F"
            />
            <path
              opacity="0.15"
              d="M16.0913 14.8876C16.0913 15.0445 16.0766 15.196 16.0493 15.3433C16.0413 15.3823 16.0331 15.4213 16.0238 15.4608C16.0063 15.5308 15.9878 15.5986 15.9646 15.6664C15.9523 15.7014 15.9398 15.7364 15.9268 15.7704C15.9133 15.8054 15.8988 15.8394 15.8836 15.8744C15.839 15.9769 15.7867 16.0757 15.727 16.1702C15.6503 16.2941 15.5627 16.4107 15.4649 16.5188C15.0178 17.0136 13.5003 17.8951 12.9411 18.2535L11.6998 19.0126C10.7898 19.5733 9.93018 19.9701 8.84593 19.9974C8.7946 19.9989 8.74435 20.0001 8.6946 20.0001C8.6246 20.0001 8.5556 19.9989 8.48635 19.9961C6.65037 19.9261 5.04925 18.9396 4.12578 17.4821C3.69367 16.8013 3.42146 16.0316 3.32959 15.2305C3.52813 16.3531 4.50561 17.204 5.68415 17.204C6.09725 17.204 6.48509 17.0997 6.82341 16.9161L6.83167 16.9119L6.95295 16.8389L7.44731 16.5471L8.07646 16.1745V16.1567L8.15748 16.108L13.7861 12.7714L14.2194 12.5146L14.2624 12.5291L14.2679 12.5306C14.3924 12.5614 14.5138 12.6036 14.6295 12.6549C14.8986 12.7709 15.1409 12.936 15.3489 13.1372C15.4327 13.2174 15.5103 13.3037 15.581 13.3956C15.642 13.4723 15.697 13.5536 15.747 13.6386C15.9653 14.0027 16.0913 14.4313 16.0913 14.8876Z"
              fill="url(#paint3_linear_270_24899)"
            />
          </g>
        </g>
        <defs>
          <linearGradient
            id="paint0_linear_270_24899"
            x1="10.4492"
            y1="7.1035"
            x2="16.8426"
            y2="14.2288"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#37BDFF" />
            <stop offset="0.25" stopColor="#26C6F4" />
            <stop offset="0.5" stopColor="#15D0E9" />
            <stop offset="0.75" stopColor="#3BD6DF" />
            <stop offset="1" stopColor="#62DCD4" />
          </linearGradient>
          <linearGradient
            id="paint1_linear_270_24899"
            x1="6.01311"
            y1="16.901"
            x2="5.80748"
            y2="1.08948"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#1B48EF" />
            <stop offset="0.5" stopColor="#2080F1" />
            <stop offset="1" stopColor="#26B8F4" />
          </linearGradient>
          <linearGradient
            id="paint2_linear_270_24899"
            x1="9.71043"
            y1="16.2445"
            x2="25.1843"
            y2="16.2445"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#39D2FF" />
            <stop offset="0.5" stopColor="#248FFA" />
            <stop offset="1" stopColor="#104CF5" />
          </linearGradient>
          <linearGradient
            id="paint3_linear_270_24899"
            x1="9.71043"
            y1="16.2445"
            x2="25.1843"
            y2="16.2445"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="white" />
            <stop offset="1" />
          </linearGradient>
          <clipPath id="clip0_270_24899">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.0996094)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const BingLogoGray: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_270_24265)">
          <mask
            id="mask0_270_24265"
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="21"
            height="20"
          >
            <path d="M20.0996 0H0.0996094V20H20.0996V0Z" fill="white" />
          </mask>
          <g mask="url(#mask0_270_24265)">
            <path
              d="M9.53864 6.93624C9.53564 6.96025 9.53564 6.9875 9.53564 7.01425C9.53564 7.11828 9.55639 7.2183 9.59398 7.31033L9.62748 7.37935L9.75998 7.71842L10.4484 9.47459L11.0488 11.0082C11.2201 11.3178 11.4944 11.5608 11.8252 11.6903L11.928 11.7281C11.932 11.7293 11.9387 11.7293 11.9442 11.7308L13.5899 12.2968V12.298L14.2191 12.5141L14.2621 12.5286L14.2676 12.5301C14.3916 12.5613 14.5131 12.6033 14.6291 12.6546C14.8975 12.7703 15.1407 12.9354 15.3486 13.1367C15.4323 13.2168 15.5093 13.303 15.5806 13.395C15.6413 13.4723 15.6967 13.5535 15.7466 13.6381C15.9662 14.0027 16.0922 14.4313 16.0922 14.8876C16.0922 14.9692 16.0882 15.0479 16.08 15.1279C16.0772 15.1632 16.073 15.1972 16.0677 15.2309V15.2337C16.0622 15.2695 16.0555 15.3065 16.0487 15.3428C16.0417 15.378 16.0352 15.413 16.0272 15.448C16.026 15.452 16.0245 15.4563 16.023 15.4603C16.0155 15.4958 16.006 15.5308 15.9962 15.566C15.9875 15.5993 15.9765 15.6336 15.9642 15.6658C15.9534 15.7011 15.9408 15.7358 15.9265 15.7698C15.9142 15.8048 15.8997 15.8403 15.8835 15.8738C15.8389 15.9767 15.7859 16.0754 15.7264 16.1697C15.6496 16.2935 15.5621 16.4103 15.4646 16.5185C16.2368 15.6883 16.7501 14.6163 16.8779 13.43C16.8994 13.2355 16.9104 13.0382 16.9104 12.8397C16.9104 12.7128 16.9049 12.5873 16.8966 12.4613C16.7994 11.0388 16.1517 9.76642 15.1632 8.85842C14.8907 8.60617 14.5929 8.38159 14.2726 8.19104L13.6674 7.88171L10.6009 6.30809C10.5066 6.26767 10.4051 6.24691 10.3026 6.24707C9.90548 6.24707 9.57773 6.5499 9.53864 6.93624Z"
              fill="#9E9E9E"
            />
            <path
              d="M9.53864 6.93624C9.53564 6.96025 9.53564 6.9875 9.53564 7.01425C9.53564 7.11828 9.55639 7.2183 9.59398 7.31033L9.62748 7.37935L9.75998 7.71842L10.4484 9.47459L11.0488 11.0082C11.2201 11.3178 11.4944 11.5608 11.8252 11.6903L11.928 11.7281C11.932 11.7293 11.9387 11.7293 11.9442 11.7308L13.5899 12.2968V12.298L14.2191 12.5141L14.2621 12.5286L14.2676 12.5301C14.3916 12.5613 14.5131 12.6033 14.6291 12.6546C14.8975 12.7703 15.1407 12.9354 15.3486 13.1367C15.4323 13.2168 15.5093 13.303 15.5806 13.395C15.6413 13.4723 15.6967 13.5535 15.7466 13.6381C15.9662 14.0027 16.0922 14.4313 16.0922 14.8876C16.0922 14.9692 16.0882 15.0479 16.08 15.1279C16.0772 15.1632 16.073 15.1972 16.0677 15.2309V15.2337C16.0622 15.2695 16.0555 15.3065 16.0487 15.3428C16.0417 15.378 16.0352 15.413 16.0272 15.448C16.026 15.452 16.0245 15.4563 16.023 15.4603C16.0155 15.4958 16.006 15.5308 15.9962 15.566C15.9875 15.5993 15.9765 15.6336 15.9642 15.6658C15.9534 15.7011 15.9408 15.7358 15.9265 15.7698C15.9142 15.8048 15.8997 15.8403 15.8835 15.8738C15.8389 15.9767 15.7859 16.0754 15.7264 16.1697C15.6496 16.2935 15.5621 16.4103 15.4646 16.5185C16.2368 15.6883 16.7501 14.6163 16.8779 13.43C16.8994 13.2355 16.9104 13.0382 16.9104 12.8397C16.9104 12.7128 16.9049 12.5873 16.8966 12.4613C16.7994 11.0388 16.1517 9.76642 15.1632 8.85842C14.8907 8.60617 14.5929 8.38159 14.2726 8.19104L13.6674 7.88171L10.6009 6.30809C10.5066 6.26767 10.4051 6.24691 10.3026 6.24707C9.90548 6.24707 9.57773 6.5499 9.53864 6.93624Z"
              fill="#9E9E9E"
            />
            <path
              d="M4.07868 0C3.64233 0.00775184 3.29199 0.364837 3.29199 0.801441V14.7812C3.29374 14.8787 3.29924 14.9751 3.30624 15.0728C3.31249 15.1243 3.31924 15.1778 3.32875 15.2298C3.52804 16.3519 4.50428 17.2033 5.68306 17.2033C6.09641 17.2033 6.484 17.0981 6.82308 16.915C6.82508 16.9135 6.82857 16.9115 6.83032 16.9115L6.95236 16.8377L7.44698 16.5467L8.07613 16.1733L8.07763 3.75214C8.07763 2.92669 7.66453 2.19902 7.03213 1.76667C7.01713 1.75767 7.00262 1.74817 6.98937 1.73742L4.54128 0.136533C4.41726 0.0545129 4.26772 0.00300072 4.10743 0H4.07868Z"
              fill="#9E9E9E"
            />
            <path
              d="M4.07868 0C3.64233 0.00775184 3.29199 0.364837 3.29199 0.801441V14.7812C3.29374 14.8787 3.29924 14.9751 3.30624 15.0728C3.31249 15.1243 3.31924 15.1778 3.32875 15.2298C3.52804 16.3519 4.50428 17.2033 5.68306 17.2033C6.09641 17.2033 6.484 17.0981 6.82308 16.915C6.82508 16.9135 6.82857 16.9115 6.83032 16.9115L6.95236 16.8377L7.44698 16.5467L8.07613 16.1733L8.07763 3.75214C8.07763 2.92669 7.66453 2.19902 7.03213 1.76667C7.01713 1.75767 7.00262 1.74817 6.98937 1.73742L4.54128 0.136533C4.41726 0.0545129 4.26772 0.00300072 4.10743 0H4.07868Z"
              fill="#9E9E9E"
            />
            <path
              d="M13.7861 12.7716L8.15748 16.108L8.07646 16.1567V16.1745L7.44731 16.5471L6.95295 16.8389L6.83167 16.9121L6.82341 16.9161C6.48509 17.1 6.09725 17.204 5.68415 17.204C4.50561 17.204 3.52813 16.3531 3.32959 15.2305C3.42386 16.0517 3.70367 16.8161 4.12578 17.4821C4.99498 18.8541 6.46483 19.8086 8.16524 19.9744H9.20501C10.1247 19.8784 10.8926 19.5101 11.6998 19.0126L12.9411 18.2535C13.5003 17.8951 15.0178 17.0136 15.4649 16.5191C15.5623 16.4108 15.65 16.2947 15.7268 16.1705C15.7863 16.076 15.8393 15.9772 15.8838 15.8744C15.8988 15.8394 15.9131 15.8054 15.9268 15.7706C15.9398 15.7361 15.9521 15.7014 15.9646 15.6661C15.9878 15.5986 16.0063 15.5308 16.0241 15.4611C16.0331 15.4213 16.0413 15.3821 16.0496 15.3431C16.0766 15.1957 16.0913 15.0445 16.0913 14.8876C16.0913 14.4313 15.9653 14.0027 15.747 13.6386C15.697 13.5536 15.642 13.4723 15.581 13.3956C15.5098 13.3031 15.4327 13.2173 15.3489 13.1372C15.1412 12.936 14.8986 12.7709 14.6295 12.6549C14.5135 12.6036 14.3924 12.5614 14.2679 12.5306L14.2624 12.5291L14.2194 12.5146L13.7861 12.7716Z"
              fill="#9E9E9E"
            />
            <path
              d="M13.7861 12.7716L8.15748 16.108L8.07646 16.1567V16.1745L7.44731 16.5471L6.95295 16.8389L6.83167 16.9121L6.82341 16.9161C6.48509 17.1 6.09725 17.204 5.68415 17.204C4.50561 17.204 3.52813 16.3531 3.32959 15.2305C3.42386 16.0517 3.70367 16.8161 4.12578 17.4821C4.99498 18.8541 6.46483 19.8086 8.16524 19.9744H9.20501C10.1247 19.8784 10.8926 19.5101 11.6998 19.0126L12.9411 18.2535C13.5003 17.8951 15.0178 17.0136 15.4649 16.5191C15.5623 16.4108 15.65 16.2947 15.7268 16.1705C15.7863 16.076 15.8393 15.9772 15.8838 15.8744C15.8988 15.8394 15.9131 15.8054 15.9268 15.7706C15.9398 15.7361 15.9521 15.7014 15.9646 15.6661C15.9878 15.5986 16.0063 15.5308 16.0241 15.4611C16.0331 15.4213 16.0413 15.3821 16.0496 15.3431C16.0766 15.1957 16.0913 15.0445 16.0913 14.8876C16.0913 14.4313 15.9653 14.0027 15.747 13.6386C15.697 13.5536 15.642 13.4723 15.581 13.3956C15.5098 13.3031 15.4327 13.2173 15.3489 13.1372C15.1412 12.936 14.8986 12.7709 14.6295 12.6549C14.5135 12.6036 14.3924 12.5614 14.2679 12.5306L14.2624 12.5291L14.2194 12.5146L13.7861 12.7716Z"
              fill="#9E9E9E"
            />
            <path
              opacity="0.15"
              d="M16.0913 14.8876C16.0913 15.0445 16.0766 15.196 16.0493 15.3433C16.0413 15.3823 16.0331 15.4213 16.0238 15.4608C16.0063 15.5308 15.9878 15.5986 15.9646 15.6664C15.9523 15.7014 15.9398 15.7364 15.9268 15.7704C15.9133 15.8054 15.8988 15.8394 15.8836 15.8744C15.839 15.9769 15.7867 16.0757 15.727 16.1702C15.6503 16.2941 15.5627 16.4107 15.4649 16.5188C15.0178 17.0136 13.5003 17.8951 12.9411 18.2535L11.6998 19.0126C10.7898 19.5733 9.93018 19.9701 8.84593 19.9974C8.7946 19.9989 8.74435 20.0001 8.6946 20.0001C8.6246 20.0001 8.5556 19.9989 8.48635 19.9961C6.65037 19.9261 5.04925 18.9396 4.12578 17.4821C3.69367 16.8013 3.42146 16.0316 3.32959 15.2305C3.52813 16.3531 4.50561 17.204 5.68415 17.204C6.09725 17.204 6.48509 17.0997 6.82341 16.9161L6.83167 16.9119L6.95295 16.8389L7.44731 16.5471L8.07646 16.1745V16.1567L8.15748 16.108L13.7861 12.7714L14.2194 12.5146L14.2624 12.5291L14.2679 12.5306C14.3924 12.5614 14.5138 12.6036 14.6295 12.6549C14.8986 12.7709 15.1409 12.936 15.3489 13.1372C15.4327 13.2174 15.5103 13.3037 15.581 13.3956C15.642 13.4723 15.697 13.5536 15.747 13.6386C15.9653 14.0027 16.0913 14.4313 16.0913 14.8876Z"
              fill="#9E9E9E"
            />
            <path
              opacity="0.15"
              d="M16.0913 14.8876C16.0913 15.0445 16.0766 15.196 16.0493 15.3433C16.0413 15.3823 16.0331 15.4213 16.0238 15.4608C16.0063 15.5308 15.9878 15.5986 15.9646 15.6664C15.9523 15.7014 15.9398 15.7364 15.9268 15.7704C15.9133 15.8054 15.8988 15.8394 15.8836 15.8744C15.839 15.9769 15.7867 16.0757 15.727 16.1702C15.6503 16.2941 15.5627 16.4107 15.4649 16.5188C15.0178 17.0136 13.5003 17.8951 12.9411 18.2535L11.6998 19.0126C10.7898 19.5733 9.93018 19.9701 8.84593 19.9974C8.7946 19.9989 8.74435 20.0001 8.6946 20.0001C8.6246 20.0001 8.5556 19.9989 8.48635 19.9961C6.65037 19.9261 5.04925 18.9396 4.12578 17.4821C3.69367 16.8013 3.42146 16.0316 3.32959 15.2305C3.52813 16.3531 4.50561 17.204 5.68415 17.204C6.09725 17.204 6.48509 17.0997 6.82341 16.9161L6.83167 16.9119L6.95295 16.8389L7.44731 16.5471L8.07646 16.1745V16.1567L8.15748 16.108L13.7861 12.7714L14.2194 12.5146L14.2624 12.5291L14.2679 12.5306C14.3924 12.5614 14.5138 12.6036 14.6295 12.6549C14.8986 12.7709 15.1409 12.936 15.3489 13.1372C15.4327 13.2174 15.5103 13.3037 15.581 13.3956C15.642 13.4723 15.697 13.5536 15.747 13.6386C15.9653 14.0027 16.0913 14.4313 16.0913 14.8876Z"
              fill="#9E9E9E"
            />
          </g>
        </g>
        <defs>
          <clipPath id="clip0_270_24265">
            <rect
              width="20"
              height="20"
              fill="white"
              transform="translate(0.0996094)"
            />
          </clipPath>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const BardLogo: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M9.0638 1.76953C9.05469 1.73763 8.89974 1.25 8.34375 1.25C7.78776 1.25 7.63281 1.73763 7.6237 1.76953C7.45052 2.13867 7.05859 3.28711 6.45703 4.35807C6.15913 4.88842 5.70685 5.34174 5.34961 5.67057C4.45182 6.5319 2.85677 7.097 2.05924 7.46159C1.63542 7.65534 1.47135 7.78516 1.43945 8.24089C1.47135 8.69661 1.63542 8.82643 2.05924 9.02018C2.85677 9.38477 4.45182 9.94987 5.34961 10.8112C5.70685 11.14 6.16825 11.566 6.46615 12.0964C7.06771 13.1673 7.45052 14.1608 7.6237 14.5299C7.63281 14.5618 7.78776 15.0495 8.34375 15.0495C8.89974 15.0495 9.05469 14.5618 9.0638 14.5299C9.23698 14.1608 9.61979 13.1673 10.2214 12.0964C10.5193 11.566 10.9807 11.14 11.3379 10.8112C12.2357 9.94987 13.8307 9.38477 14.6283 9.02018C15.0521 8.82643 15.2161 8.69661 15.248 8.24089C15.2161 7.78516 15.0521 7.65534 14.6283 7.46159C13.8307 7.097 12.2357 6.5319 11.3379 5.67057C10.9807 5.34174 10.5284 4.88842 10.2305 4.35807C9.62891 3.28711 9.23698 2.13867 9.0638 1.76953Z"
          fill="url(#paint0_radial_270_25128)"
        />
        <path
          d="M15.9271 12.6098C15.9229 12.5951 15.8513 12.3696 15.5944 12.3696C15.3375 12.3696 15.2659 12.5951 15.2617 12.6098C15.1817 12.7805 15.0006 13.3115 14.7226 13.8067C14.585 14.0519 14.376 14.2614 14.211 14.4135C13.7962 14.8117 13.0592 15.073 12.6907 15.2416C12.4948 15.3311 12.419 15.3912 12.4043 15.6019C12.419 15.8126 12.4948 15.8726 12.6907 15.9622C13.0592 16.1307 13.7962 16.392 14.211 16.7903C14.376 16.9423 14.5892 17.1392 14.7269 17.3845C15.0048 17.8796 15.1817 18.339 15.2617 18.5096C15.2659 18.5244 15.3375 18.7498 15.5944 18.7498C15.8513 18.7498 15.9229 18.5244 15.9271 18.5096C16.0071 18.339 16.184 17.8796 16.4619 17.3845C16.5996 17.1392 16.8128 16.9423 16.9778 16.7903C17.3927 16.392 18.1296 16.1307 18.4981 15.9622C18.694 15.8726 18.7698 15.8126 18.7845 15.6019C18.7698 15.3912 18.694 15.3311 18.4981 15.2416C18.1296 15.073 17.3927 14.8117 16.9778 14.4135C16.8128 14.2614 16.6038 14.0519 16.4662 13.8067C16.1882 13.3115 16.0071 12.7805 15.9271 12.6098Z"
          fill="url(#paint1_radial_270_25128)"
        />
        <defs>
          <radialGradient
            id="paint0_radial_270_25128"
            cx="0"
            cy="0"
            r="1"
            gradientUnits="userSpaceOnUse"
            gradientTransform="translate(15.248 8.39128) rotate(-180) scale(13.8086 13.8177)"
          >
            <stop stopColor="#508BD7" />
            <stop offset="0.193511" stopColor="#2B9ADF" />
            <stop offset="0.542314" stopColor="#797DD0" />
            <stop offset="0.811844" stopColor="#D96570" />
            <stop offset="1" stopColor="#F49C46" />
          </radialGradient>
          <radialGradient
            id="paint1_radial_270_25128"
            cx="0"
            cy="0"
            r="1"
            gradientUnits="userSpaceOnUse"
            gradientTransform="translate(17.0254 17.6424) rotate(-130.146) scale(5.78902 20.7721)"
          >
            <stop stopColor="#EE8F50" />
            <stop offset="0.277653" stopColor="#D9666F" />
            <stop offset="0.628995" stopColor="#B46DA7" />
            <stop offset="1" stopColor="#7F7BCF" />
          </radialGradient>
        </defs>
      </svg>
    </SvgIcon>
  )
}
const BardLogoGray: FC<SvgIconProps> = (props) => {
  return (
    <SvgIcon viewBox="0 0 20 20" sx={props.sx}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M9.0638 1.76953C9.05469 1.73763 8.89974 1.25 8.34375 1.25C7.78776 1.25 7.63281 1.73763 7.6237 1.76953C7.45052 2.13867 7.05859 3.28711 6.45703 4.35807C6.15913 4.88842 5.70685 5.34174 5.34961 5.67057C4.45182 6.5319 2.85677 7.097 2.05924 7.46159C1.63542 7.65534 1.47135 7.78516 1.43945 8.24089C1.47135 8.69661 1.63542 8.82643 2.05924 9.02018C2.85677 9.38477 4.45182 9.94987 5.34961 10.8112C5.70685 11.14 6.16825 11.566 6.46615 12.0964C7.06771 13.1673 7.45052 14.1608 7.6237 14.5299C7.63281 14.5618 7.78776 15.0495 8.34375 15.0495C8.89974 15.0495 9.05469 14.5618 9.0638 14.5299C9.23698 14.1608 9.61979 13.1673 10.2214 12.0964C10.5193 11.566 10.9807 11.14 11.3379 10.8112C12.2357 9.94987 13.8307 9.38477 14.6283 9.02018C15.0521 8.82643 15.2161 8.69661 15.248 8.24089C15.2161 7.78516 15.0521 7.65534 14.6283 7.46159C13.8307 7.097 12.2357 6.5319 11.3379 5.67057C10.9807 5.34174 10.5284 4.88842 10.2305 4.35807C9.62891 3.28711 9.23698 2.13867 9.0638 1.76953Z"
          fill="#9E9E9E"
        />
        <path
          d="M15.9271 12.6098C15.9229 12.5951 15.8513 12.3696 15.5944 12.3696C15.3375 12.3696 15.2659 12.5951 15.2617 12.6098C15.1817 12.7805 15.0006 13.3115 14.7226 13.8067C14.585 14.0519 14.376 14.2614 14.211 14.4135C13.7962 14.8117 13.0592 15.073 12.6907 15.2416C12.4948 15.3311 12.419 15.3912 12.4043 15.6019C12.419 15.8126 12.4948 15.8726 12.6907 15.9622C13.0592 16.1307 13.7962 16.392 14.211 16.7903C14.376 16.9423 14.5892 17.1392 14.7269 17.3845C15.0048 17.8796 15.1817 18.339 15.2617 18.5096C15.2659 18.5244 15.3375 18.7498 15.5944 18.7498C15.8513 18.7498 15.9229 18.5244 15.9271 18.5096C16.0071 18.339 16.184 17.8796 16.4619 17.3845C16.5996 17.1392 16.8128 16.9423 16.9778 16.7903C17.3927 16.392 18.1296 16.1307 18.4981 15.9622C18.694 15.8726 18.7698 15.8126 18.7845 15.6019C18.7698 15.3912 18.694 15.3311 18.4981 15.2416C18.1296 15.073 17.3927 14.8117 16.9778 14.4135C16.8128 14.2614 16.6038 14.0519 16.4662 13.8067C16.1882 13.3115 16.0071 12.7805 15.9271 12.6098Z"
          fill="#9E9E9E"
        />
      </svg>
    </SvgIcon>
  )
}

export type ITextIconType =
  | 'ChatGPTLogo'
  | 'ChatGPTLogoGray'
  | 'ChatGPTLogoOutLine'
  | 'ChatGPTLogoOutLineGray'
  | 'AILogo'
  | 'AILogoGray'
  | 'BingLogo'
  | 'BingLogoGray'
  | 'BardLogo'
  | 'BardLogoGray'
  | 'Lock'
  | 'Done'
  | 'Unhappy'
  | 'Incorrect'
  | 'Database'
  | 'ThumbUp'
  | 'QuestionMark'

interface IconType {
  icon: ITextIconType
  sx?: SxProps<Theme>
}

const TextIcon: FC<IconType> = ({ icon, sx }) => {
  const renderIcon = () => {
    switch (icon) {
      case 'Lock':
        return <Lock sx={sx} />
      case 'Done':
        return <Done sx={sx} />
      case 'Unhappy':
        return <Unhappy sx={sx} />
      case 'Incorrect':
        return <Incorrect sx={sx} />
      case 'Database':
        return <Database sx={sx} />
      case 'ThumbUp':
        return <ThumbUp sx={sx} />
      case 'QuestionMark':
        return <QuestionMark sx={sx} />
      case 'ChatGPTLogo':
        return <ChatGPTLogo sx={sx} />
      case 'ChatGPTLogoGray':
        return <ChatGPTLogoGray sx={sx} />
      case 'ChatGPTLogoOutLine':
        return <ChatGPTLogoOutLine sx={sx} />
      case 'ChatGPTLogoOutLineGray':
        return <ChatGPTLogoOutLineGray sx={sx} />
      case 'AILogo':
        return <AILogo sx={sx} />
      case 'AILogoGray':
        return <AILogoGray sx={sx} />
      case 'BingLogo':
        return <BingLogo sx={sx} />
      case 'BingLogoGray':
        return <BingLogoGray sx={sx} />
      case 'BardLogo':
        return <BardLogo sx={sx} />
      case 'BardLogoGray':
        return <BardLogoGray sx={sx} />
      default:
        return null
    }
  }
  return <React.Fragment>{renderIcon()}</React.Fragment>
}

export default TextIcon
